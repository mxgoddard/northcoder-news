<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title></title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" type="text/css" media="screen" href="main.css" />
</head>
<body>
    <h1>Northcoders Reddit</h1>
    <h2>A list of all the endpoints: </h2>
    <ul>
        <li>GET /api </li>
        <li>GET /api/topics</li>
        <li>GET /api/topics/:topic_slug/articles</li>
        <li>POST /api/topics/:topic_slug/articles</li>
        <li>GET /api/articles</li>
        <li>GET /api/articles/:article_id</li>
        <li>GET /api/articles/:article_id/comments</li>
        <li>POST /api/articles/:article_id/comments</li>
        <li>PATCH /api/articles/:article_id</li>
        <li>PATCH /api/comments/:comment_id</li>
        <li>DELETE /api/comments/:comment_id</li>
        <li>GET /api/users/:username</li>
      </ul>
</body>
</html>


<!-- GET /api 
# Serves an HTML page with documentation for all the available endpoints
GET /api/topics (done)
# Get all the topics
GET /api/topics/:topic_slug/articles (done)
# Return all the articles for a certain topic
# e.g: `/api/topics/football/articles`
POST /api/topics/:topic_slug/articles (done)
# Add a new article to a topic. This route requires a JSON body with title and body key value pairs
# e.g: `{ "title": "new article", "body": "This is my new article content", "created_by": "user_id goes here"}`
GET /api/articles (done)
# Returns all the articles
GET /api/articles/:article_id (done)
# Get an individual article
GET /api/articles/:article_id/comments (done)
# Get all the comments for a individual article
POST /api/articles/:article_id/comments (done)
# Add a new comment to an article. This route requires a JSON body with body and created_by key value pairs
# e.g: `{"body": "This is my new comment", "created_by": "user_id goes here"}`
PATCH /api/articles/:article_id (done)
# Increment or Decrement the votes of an article by one. This route requires a vote query of 'up' or 'down'
# e.g: `/api/articles/:article_id?vote=up`
PATCH /api/comments/:comment_id (done)
# Increment or Decrement the votes of a comment by one. This route requires a vote query of 'up' or 'down'
# e.g: `/api/comments/:comment_id?vote=down`
DELETE /api/comments/:comment_id (done)
# Deletes a comment
GET /api/users/:username (done)
# e.g: `/api/users/mitch123`
# Returns a JSON object with the profile data for the specified user. -->
